openapi: 3.0.3
info:
  title: Lesson OpenApi
  description: |
    Lesson management app using CBOR as PoC. More at [https://lesson.vymalo.com](https://lesson.vymalo.com)
  termsOfService: https://lesson.vymalo.com/res/tos
  contact:
    email: lesson@vymalo.com
    name: Vymalo Lesson Team
  license:
    name: MIT
  version: 0.1.0
externalDocs:
  description: |
    Find out more about Managing your Lesson from afar. Let's meet on 
    our website ðŸ˜‰.
  url: https://blog.ssegning.com
servers: [ ]
tags:
  - name: lesson
    description: All about managing lesson
paths:
  /api/lessons:
    get:
      tags:
        - lesson
      summary: Get lessons
      operationId: getLessons
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        200:
          description: 'successful operation'
          content:
            application/json:
              schema:
                type: array
                minItems: 1
                maxItems: 100
                items:
                  $ref: '#/components/schemas/Lesson'
        400:
          description: 'wrong content provided'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: 'Internal server'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - lesson
      summary: Create lesson
      security:
        - bearerAuth: [ ]
      operationId: createLesson
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLesson'
        required: true
      responses:
        201:
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lesson'
        400:
          description: 'wrong content provided'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: 'Internal server'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/lessons/{slug_name_or_id}:
    get:
      tags:
        - lesson
      summary: Get lesson
      operationId: getLesson
      parameters:
        - $ref: '#/components/parameters/slug_name_or_id'
      responses:
        200:
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lesson'
        400:
          description: 'wrong content provided'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: 'Internal server'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - lesson
      summary: Update lesson
      operationId: updateLesson
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/slug_name_or_id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLesson'
        required: true
      responses:
        201:
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lesson'
        400:
          description: 'wrong content provided'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: 'Internal server'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/lessons/{slug_name_or_id}/blocks:
    get:
      tags:
        - lesson
      summary: Get lesson course
      operationId: getLessonBlocks
      parameters:
        - $ref: '#/components/parameters/slug_name_or_id'
      responses:
        200:
          description: 'successful operation'
          content:
            application/json:
              schema:
                type: array
                minItems: 1
                maxItems: 100
                items:
                  $ref: '#/components/schemas/LessonBlock'
        400:
          description: 'wrong content provided'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: 'Internal server'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  parameters:
    limit:
      name: limit
      in: query
      description: Number of items to return
      required: false
      schema:
        type: integer
        format: int32
    offset:
      name: offset
      in: query
      description: The number of items to skip before starting to collect the result set
      required: false
      schema:
        type: integer
        format: int32
    slug_name_or_id:
      name: slug_name_or_id
      in: path
      required: true
      description: The slug name or id of the lesson
      schema:
        $ref: '#/components/schemas/Cuid'
  schemas:
    Model:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Cuid'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        meta:
          type: object
          additionalProperties: true
          default: { }
          example: { }
      required:
        - id
        - created_at
        - updated_at
    CoreLesson:
      properties:
        title:
          type: string
          example: Introduction to TypeScript
        description:
          type: string
          example: |
            This is a course that will introduce you to TypeScript.
            You will learn the basics of TypeScript and how to use it in your projects.
        slug_name:
          type: string
          example: introduction-to-typescript
        status:
          type: string
          enum:
            - draft
            - published
            - archived
          default: draft
          example: draft
      required:
        - title
        - description
        - slug_name
    UpdateLesson:
      allOf:
        - $ref: '#/components/schemas/Model'
        - $ref: '#/components/schemas/CoreLesson'
        - type: object
          properties:
            blocks:
              type: array
              minItems: 1
              maxItems: 100
              items:
                $ref: '#/components/schemas/CoreLessonBlock'
          required:
            - course
            - slides
    Lesson:
      allOf:
        - $ref: '#/components/schemas/Model'
        - $ref: '#/components/schemas/CoreLesson'
    SlideBlock:
      type: object
      properties:
        type:
          type: string
          enum:
            - slide
        content:
          type: string
          example: |
            ## Slide 1
            A paragraph with some text and a [link to adorsys](https://adorsys.com).
            ------
            ## Slide 1-1
            Some more text and another [link to Vymalo](https://vymalo.com).
            ------
            ## Slide 1-2
            Second slide with some text and a [link to SSegning](https://ssegning.com).
            ---
            ## Slide 2
            ```typescript [1-2|3|4]
            let a = 1;
            let b = 2;
            let c = x => 1 + 2 + x;
            c(3);
            ```
            ---
            ## Slide 3
            ```mermaid
            graph LR;
              A[Hard edge]-->|Link text|B(Round edge);
              B-->C{Decision};
              C-->|One|D[Result one];
              C-->|Two|E[Result two];
            ```
      required:
        - content
        - type
    CourseBlock:
      type: object
      properties:
        type:
          type: string
          enum:
            - content
        content:
          type: string
          example: |
            # This is a course
            
            ## Lesson 1
            Some meaningful content
            
            ## Lesson 2
            Some more meaningful content
            ```typescript
            let a = 1;
            let b = 2;
            let c = x => 1 + 2 + x;
            c(3);
            ```
            
            ## Lesson 3
            ```mermaid
            flowchart LR
              A[Start] --> B{Is it?};
              B -- Yes --> C[OK];
              C --> D[Rethink];
              D --> B;
              B -- No ----> E[End];
            ```
      required:
        - content
        - type
    CoreLessonBlock:
      oneOf:
        - $ref: '#/components/schemas/SlideBlock'
        - $ref: '#/components/schemas/CourseBlock'
    LessonBlock:
      allOf:
        - $ref: '#/components/schemas/Model'
        - $ref: '#/components/schemas/CoreLessonBlock'
    Error:
      type: object
      properties:
        message:
          type: string
        code:
          type: number
      required:
        - message
        - code
    Cuid:
      type: string
      format: cuid
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT